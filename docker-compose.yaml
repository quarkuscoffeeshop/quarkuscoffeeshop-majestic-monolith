version: '3.7'

volumes:
  redpanda: null

services:

  coffeeshop-db:
    image: postgres:11
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=coffeeshopuser
      - POSTGRES_PASSWORD=redhat-21
      - POSTGRES_DB=coffeeshopdb
    volumes:
      - ./init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql
    networks:
      - my-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - my-network

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.8
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
#  console:
#    image: docker.redpanda.com/redpandadata/console:v2.3.1
#    entrypoint: /bin/sh
#    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
#    environment:
#      CONFIG_FILEPATH: /tmp/config.yml
#      CONSOLE_CONFIG_FILE: |
#        kafka:
#          brokers: ["redpanda:9092"]
#          schemaRegistry:
#            enabled: true
#            urls: ["http://redpanda:8081"]
#        redpanda:
#          adminApi:
#            enabled: true
#            urls: ["http://redpanda:9644"]
#        connect:
#          enabled: true
#          clusters:
#            - name: local-connect-cluster
#              url: http://connect:8083
#    ports:
#      - 8080:8080
#    networks:
#      - my-network
#    depends_on:
#      - redpanda
#  owl-shop:
#    image: quay.io/cloudhut/owl-shop:sha-042112b
#    networks:
#      - my-network
#    platform: 'linux/amd64'
#    entrypoint: /bin/sh
#    command: -c "echo \"$$OWLSHOP_CONFIG_FILE\" > /tmp/config.yml; /app/owlshop"
#    environment:
#      CONFIG_FILEPATH: /tmp/config.yml
#      OWLSHOP_CONFIG_FILE: |
#        shop:
#          requestRate: 1
#          interval: 0.1s
#          topicReplicationFactor: 1
#          topicPartitionCount: 1
#        kafka:
#          brokers: "redpanda:9092"
#    depends_on:
#      - redpanda
  connect:
    image: docker.redpanda.com/redpandadata/connectors:latest
    hostname: connect
    container_name: connect
    networks:
      - my-network
    platform: 'linux/amd64'
    depends_on:
      - redpanda
    ports:
      - "8083:8083"
    environment:
      CONNECT_CONFIGURATION: |
        key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
        value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
        group.id=connectors-cluster
        offset.storage.topic=_internal_connectors_offsets
        config.storage.topic=_internal_connectors_configs
        status.storage.topic=_internal_connectors_status
        config.storage.replication.factor=-1
        offset.storage.replication.factor=-1
        status.storage.replication.factor=-1
        offset.flush.interval.ms=1000
        producer.linger.ms=50
        producer.batch.size=131072
      CONNECT_BOOTSTRAP_SERVERS: redpanda:9092
      CONNECT_GC_LOG_ENABLED: "false"
      CONNECT_HEAP_OPTS: -Xms512M -Xmx512M
      CONNECT_LOG_LEVEL: info
#
#  zookeeper:
#    image: strimzi/kafka:0.11.4-kafka-2.1.0
#    command: [
#      "sh", "-c",
#      "bin/zookeeper-server-start.sh config/zookeeper.properties"
#    ]
#    ports:
#      - "2181:2181"
#    environment:
#      LOG_DIR: /tmp/logs
#    networks:
#      - my-network
#
#  kafka:
#    image: strimzi/kafka:0.11.4-kafka-2.1.0
#    command: [
#      "sh", "-c",
#      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
#    ]
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      LOG_DIR: "/tmp/logs"
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    networks:
#      - my-network
#
networks:
  my-network:
    name: coffeeshop-network
